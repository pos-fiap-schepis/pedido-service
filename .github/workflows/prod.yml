name: Deploy aplicacao pedido

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Configurando java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Fazendo build do projeto
        run: mvn clean install -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: 'us-east-1'
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t ${{ github.repository }}:${{ github.sha }} .
          docker tag ${{ github.repository }}:${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ github.repository }}:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ github.repository }}:latest

  deploy:
    name: Deploy to EKS Cluster
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: 'us-east-1'
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Retrieve RDS Endpoint
        id: rds_endpoint
        run: |
          RDS_HOSTNAME=$(aws rds describe-db-instances --db-instance-identifier postgres-db-fast-food --query "DBInstances[0].Endpoint.Address" --output text)
          echo "RDS_HOSTNAME=$RDS_HOSTNAME" >> $GITHUB_ENV

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name pedido-eks-cluster --region ${{ secrets.AWS_REGION }}

      - name: Apply Kubernetes configurations
        run: |
          sed "s/{{RDS_HOSTNAME}}/${RDS_HOSTNAME}/g" k8s/pod-pedido-api.yaml | kubectl apply -f -
          kubectl apply -f k8s/config-map-postgres.yaml
          kubectl apply -f k8s/hpa-pedido-api.yaml
          kubectl apply -f k8s/metrics.yaml
          kubectl apply -f k8s/svc-pedido-api.yaml

      - name: Update pedido-api image
        run: |
          kubectl set image deployment/pedido-api backend-pedido-api=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ github.repository }}:latest